
Started updateSGP Saturday August 13 09:56:14 2016


	updateSGP(
		 what_sgp_object = Massachusetts_SGP
		with_sgp_data_LONG = Massachusetts_Data_LONG_2015
		state = MA_2016
		steps = c("prepareSGP", "analyzeSGP", "combineSGP", "outputSGP")
		sgp.percentiles = TRUE
		sgp.projections = FALSE
		sgp.projections.lagged = FALSE
		sgp.percentiles.baseline = FALSE
		sgp.projections.baseline = FALSE
		sgp.projections.lagged.baseline = FALSE
		simulate.sgps = FALSE
		save.intermediate.results = FALSE
		outputSGP.output.type = c("LONG_FINAL_YEAR_Data", "WIDE_Data")
		sgp.config = MA_2015.config
		parallel.config = list(BACKEND = "PARALLEL", WORKERS = list(PERCENTILES = 20))
		sgp.percentiles.equated = FALSE )


Started prepareSGP Saturday August 13 09:56:14 2016


	prepareSGP(
		 data = with_sgp_data_LONG
		state = state
		create.additional.variables = FALSE
		fix.duplicates = NULL )

Finished prepareSGP Saturday August 13 09:56:16 2016 in 1.805 Seconds 


Started prepareSGP Saturday August 13 09:56:39 2016


	prepareSGP(
		 data = what_sgp_object
		state = state
		fix.duplicates = fix.duplicates )

Finished prepareSGP Saturday August 13 09:57:27 2016 in 48.616 Seconds 


Started abcSGP Saturday August 13 09:57:27 2016


	abcSGP(
		 sgp_object = what_sgp_object
		state = state
		steps = (steps %w/o% "prepareSGP")
		years = update.years
		content_areas = update.content_areas
		grades = update.grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.target.scale.scores = sgp.target.scale.scores
		sgp.target.scale.scores.only = sgp.target.scale.scores.only
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		goodness.of.fit.print = goodness.of.fit.print
		parallel.config = parallel.config
		save.intermediate.results = save.intermediate.results
		save.old.summaries = save.old.summaries
		sgPlot.demo.report = sgPlot.demo.report
		sgp.config = sgp.config
		plot.types = plot.types
		outputSGP.output.type = outputSGP.output.type
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt )


Started analyzeSGP Saturday August 13 09:57:28 2016


	analyzeSGP(
		 sgp_object = sgp_object
		state = state
		years = years
		content_areas = content_areas
		grades = grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.minimum.default.panel.years = sgp.minimum.default.panel.years
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		goodness.of.fit.print = goodness.of.fit.print
		sgp.config = sgp.config
		parallel.config = parallel.config
		verbose.output = verbose.output
		get.cohort.data.info = get.cohort.data.info
		sgp.sqlite = sgp.sqlite
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt )

	Started studentGrowthPercentiles: Saturday August 13 09:57:55 2016
		Content Area: ALGEBRA_I, Year: 2015, Grade Progression: 3, 4, 5, 6, 7, 8  (N=4,137)
	Finished studentGrowthPercentiles: Saturday August 13 09:58:30 2016 in 34.934 Seconds

	Started studentGrowthPercentiles: Saturday August 13 09:57:55 2016
		Content Area: ELA, Year: 2015, Grade Progression: 3, 4  (N=64,096)
	Finished studentGrowthPercentiles: Saturday August 13 10:00:33 2016 in 2 Minutes, 38 Seconds

	Started studentGrowthPercentiles: Saturday August 13 09:57:55 2016
		Content Area: MATHEMATICS, Year: 2015, Grade Progression: 3, 4  (N=64,132)
	Finished studentGrowthPercentiles: Saturday August 13 10:00:33 2016 in 2 Minutes, 38 Seconds

	Started studentGrowthPercentiles: Saturday August 13 09:57:55 2016
		Content Area: ELA, Year: 2015, Grade Progression: 3, 4, 5  (N=64,988)
	Finished studentGrowthPercentiles: Saturday August 13 10:04:58 2016 in 7 Minutes, 3 Seconds

	Started studentGrowthPercentiles: Saturday August 13 09:57:55 2016
		Content Area: MATHEMATICS, Year: 2015, Grade Progression: 3, 4, 5  (N=65,484)
	Finished studentGrowthPercentiles: Saturday August 13 10:05:05 2016 in 7 Minutes, 10 Seconds

	Started studentGrowthPercentiles: Saturday August 13 09:57:55 2016
		Content Area: MATHEMATICS, Year: 2015, Grade Progression: 3, 4, 5, 6  (N=65,151)
	Finished studentGrowthPercentiles: Saturday August 13 10:10:44 2016 in 12 Minutes, 49 Seconds

	Started studentGrowthPercentiles: Saturday August 13 09:57:54 2016
		Content Area: ELA, Year: 2015, Grade Progression: 3, 4, 5, 6  (N=65,146)
	Finished studentGrowthPercentiles: Saturday August 13 10:10:55 2016 in 13 Minutes

	Started studentGrowthPercentiles: Saturday August 13 09:57:55 2016
		Content Area: MATHEMATICS, Year: 2015, Grade Progression: 3, 4, 5, 6, 7  (N=64,369)
	Finished studentGrowthPercentiles: Saturday August 13 10:18:15 2016 in 20 Minutes, 20 Seconds

	Started studentGrowthPercentiles: Saturday August 13 09:57:54 2016
		Content Area: ELA, Year: 2015, Grade Progression: 3, 4, 5, 6, 7  (N=64,336)
	Finished studentGrowthPercentiles: Saturday August 13 10:18:45 2016 in 20 Minutes, 50 Seconds

	Started studentGrowthPercentiles: Saturday August 13 09:57:55 2016
		Content Area: MATHEMATICS, Year: 2015, Grade Progression: 3, 4, 5, 6, 7, 8  (N=61,881)
	Finished studentGrowthPercentiles: Saturday August 13 10:28:11 2016 in 30 Minutes, 16 Seconds

	Started studentGrowthPercentiles: Saturday August 13 09:57:54 2016
		Content Area: ELA, Year: 2015, Grade Progression: 3, 4, 5, 6, 7, 8  (N=65,831)
	Finished studentGrowthPercentiles: Saturday August 13 10:30:59 2016 in 33 Minutes, 5 Seconds

Finished analyzeSGP Saturday August 13 10:31:04 2016 in 33 Minutes, 37 Seconds 

Started combineSGP Saturday August 13 10:31:04 2016
Finished combineSGP Saturday August 13 10:31:09 2016 in 4.933 Seconds 


Started outputSGP Saturday August 13 10:31:09 2016: Files produced from outputSGP saved in 'Data'



	outputSGP(
		 sgp_object = sgp_object
		state = state
		output.type = outputSGP.output.type
		outputSGP_SUMMARY.years = years
		outputSGP_SUMMARY.content_areas = content_areas
		outputSGP_INDIVIDUAL.years = years
		outputSGP_INDIVIDUAL.content_areas = content_areas
		outputSGP.student.groups = intersect(names(sgp_object@Data), subset(sgp_object@Names, names.type == "demographic" & names.output == TRUE, select = names.provided, drop = TRUE)) )

	Started LONG FINAL YEAR data production in outputSGP Saturday August 13 10:31:09 2016
	Finished LONG FINAL YEAR data production in outputSGP Saturday August 13 10:31:46 2016 in 36.955 Seconds 

	Started WIDE data production in outputSGP Saturday August 13 10:31:46 2016
	Finished WIDE data production in outputSGP Saturday August 13 10:44:58 2016 in 13 Minutes, 12 Seconds 

Finished outputSGP Saturday August 13 10:44:59 2016 in 13 Minutes, 50 Seconds 

Finished abcSGP Saturday August 13 10:44:59 2016 in 47 Minutes, 32 Seconds 

Finished updateSGP Saturday August 13 10:44:59 2016 in 48 Minutes, 45 Seconds 


Started updateSGP Saturday August 13 10:47:18 2016


	updateSGP(
		 what_sgp_object = Massachusetts_SGP
		with_sgp_data_LONG = Massachusetts_Data_LONG_2016
		state = MA_2016
		steps = c("prepareSGP", "analyzeSGP", "combineSGP", "outputSGP")
		sgp.percentiles = TRUE
		sgp.projections = FALSE
		sgp.projections.lagged = FALSE
		sgp.percentiles.baseline = FALSE
		sgp.projections.baseline = FALSE
		sgp.projections.lagged.baseline = FALSE
		simulate.sgps = FALSE
		save.intermediate.results = FALSE
		outputSGP.output.type = c("LONG_Data", "LONG_FINAL_YEAR_Data", "WIDE_Data")
		sgp.config = MA_2016.config
		parallel.config = list(BACKEND = "PARALLEL", WORKERS = list(PERCENTILES = 12))
		sgp.percentiles.equated = FALSE )


Started prepareSGP Saturday August 13 10:47:18 2016


	prepareSGP(
		 data = with_sgp_data_LONG
		state = state
		create.additional.variables = FALSE
		fix.duplicates = NULL )

Finished prepareSGP Saturday August 13 10:47:21 2016 in 2.597 Seconds 


Started prepareSGP Saturday August 13 10:47:42 2016


	prepareSGP(
		 data = what_sgp_object
		state = state
		fix.duplicates = fix.duplicates )

Finished prepareSGP Saturday August 13 10:48:34 2016 in 52.306 Seconds 


Started abcSGP Saturday August 13 10:48:34 2016


	abcSGP(
		 sgp_object = what_sgp_object
		state = state
		steps = (steps %w/o% "prepareSGP")
		years = update.years
		content_areas = update.content_areas
		grades = update.grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.target.scale.scores = sgp.target.scale.scores
		sgp.target.scale.scores.only = sgp.target.scale.scores.only
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		goodness.of.fit.print = goodness.of.fit.print
		parallel.config = parallel.config
		save.intermediate.results = save.intermediate.results
		save.old.summaries = save.old.summaries
		sgPlot.demo.report = sgPlot.demo.report
		sgp.config = sgp.config
		plot.types = plot.types
		outputSGP.output.type = outputSGP.output.type
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt )


Started analyzeSGP Saturday August 13 10:48:34 2016


	analyzeSGP(
		 sgp_object = sgp_object
		state = state
		years = years
		content_areas = content_areas
		grades = grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.minimum.default.panel.years = sgp.minimum.default.panel.years
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		goodness.of.fit.print = goodness.of.fit.print
		sgp.config = sgp.config
		parallel.config = parallel.config
		verbose.output = verbose.output
		get.cohort.data.info = get.cohort.data.info
		sgp.sqlite = sgp.sqlite
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt )

	Started studentGrowthPercentiles: Saturday August 13 10:49:04 2016
		Content Area: ALGEBRA_I, Year: 2016, Grade Progression: 3, 4, 5, 6, 7, 8  (N=4,766)
	Finished studentGrowthPercentiles: Saturday August 13 10:49:51 2016 in 46.815 Seconds

	Started studentGrowthPercentiles: Saturday August 13 10:49:05 2016
		Content Area: MATHEMATICS, Year: 2016, Grade Progression: 3, 4  (N=65,646)
	Finished studentGrowthPercentiles: Saturday August 13 10:52:00 2016 in 2 Minutes, 56 Seconds

	Started studentGrowthPercentiles: Saturday August 13 10:49:04 2016
		Content Area: ELA, Year: 2016, Grade Progression: 3, 4  (N=65,570)
	Finished studentGrowthPercentiles: Saturday August 13 10:52:14 2016 in 3 Minutes, 10 Seconds

	Started studentGrowthPercentiles: Saturday August 13 10:49:04 2016
		Content Area: MATHEMATICS, Year: 2016, Grade Progression: 3, 4, 5  (N=65,176)
	Finished studentGrowthPercentiles: Saturday August 13 10:55:59 2016 in 6 Minutes, 55 Seconds

	Started studentGrowthPercentiles: Saturday August 13 10:49:03 2016
		Content Area: ELA, Year: 2016, Grade Progression: 3, 4, 5  (N=65,142)
	Finished studentGrowthPercentiles: Saturday August 13 10:56:18 2016 in 7 Minutes, 15 Seconds

	Started studentGrowthPercentiles: Saturday August 13 10:49:04 2016
		Content Area: MATHEMATICS, Year: 2016, Grade Progression: 3, 4, 5, 6  (N=66,007)
	Finished studentGrowthPercentiles: Saturday August 13 11:02:04 2016 in 12 Minutes, 59 Seconds

	Started studentGrowthPercentiles: Saturday August 13 10:49:03 2016
		Content Area: ELA, Year: 2016, Grade Progression: 3, 4, 5, 6  (N=66,041)
	Finished studentGrowthPercentiles: Saturday August 13 11:02:40 2016 in 13 Minutes, 37 Seconds

	Started studentGrowthPercentiles: Saturday August 13 10:49:04 2016
		Content Area: MATHEMATICS, Year: 2016, Grade Progression: 3, 4, 5, 6, 7  (N=65,449)
	Finished studentGrowthPercentiles: Saturday August 13 11:09:36 2016 in 20 Minutes, 32 Seconds

	Started studentGrowthPercentiles: Saturday August 13 10:49:03 2016
		Content Area: ELA, Year: 2016, Grade Progression: 3, 4, 5, 6, 7  (N=65,929)
	Finished studentGrowthPercentiles: Saturday August 13 11:09:52 2016 in 20 Minutes, 48 Seconds

	Started studentGrowthPercentiles: Saturday August 13 10:49:04 2016
		Content Area: MATHEMATICS, Year: 2016, Grade Progression: 3, 4, 5, 6, 7, 8  (N=60,592)
	Finished studentGrowthPercentiles: Saturday August 13 11:23:01 2016 in 33 Minutes, 57 Seconds

	Started studentGrowthPercentiles: Saturday August 13 10:49:03 2016
		Content Area: ELA, Year: 2016, Grade Progression: 3, 4, 5, 6, 7, 8  (N=65,697)
	Finished studentGrowthPercentiles: Saturday August 13 11:25:01 2016 in 35 Minutes, 58 Seconds

Finished analyzeSGP Saturday August 13 11:25:09 2016 in 36 Minutes, 35 Seconds 

Started combineSGP Saturday August 13 11:25:09 2016
Finished combineSGP Saturday August 13 11:25:13 2016 in 4.13 Seconds 


Started outputSGP Saturday August 13 11:25:13 2016: Files produced from outputSGP saved in 'Data'



	outputSGP(
		 sgp_object = sgp_object
		state = state
		output.type = outputSGP.output.type
		outputSGP_SUMMARY.years = years
		outputSGP_SUMMARY.content_areas = content_areas
		outputSGP_INDIVIDUAL.years = years
		outputSGP_INDIVIDUAL.content_areas = content_areas
		outputSGP.student.groups = intersect(names(sgp_object@Data), subset(sgp_object@Names, names.type == "demographic" & names.output == TRUE, select = names.provided, drop = TRUE)) )

	Started LONG data production in outputSGP Saturday August 13 11:25:13 2016
	Finished LONG data production in outputSGP Saturday August 13 11:32:38 2016 in 7 Minutes, 25 Seconds 

	Started LONG FINAL YEAR data production in outputSGP Saturday August 13 11:32:38 2016
	Finished LONG FINAL YEAR data production in outputSGP Saturday August 13 11:33:27 2016 in 49.33 Seconds 

	Started WIDE data production in outputSGP Saturday August 13 11:33:27 2016
	Finished WIDE data production in outputSGP Saturday August 13 11:50:19 2016 in 16 Minutes, 52 Seconds 

Finished outputSGP Saturday August 13 11:50:21 2016 in 25 Minutes, 7 Seconds 

Finished abcSGP Saturday August 13 11:50:21 2016 in 1 Hour, 1 Minute, 47 Seconds 

Finished updateSGP Saturday August 13 11:50:21 2016 in 1 Hour, 3 Minutes, 3 Seconds 

